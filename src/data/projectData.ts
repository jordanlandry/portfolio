import rubiksCubeImage from "../assets/rubiks-cube.png";

import chess1 from "../assets/chess/chess1.png";
import chess2 from "../assets/chess/chess2.png";
import chess3 from "../assets/chess/chess3.png";

import janninscript1 from "../assets/janninscript/janninscript1.png";
import janninscript2 from "../assets/janninscript/janninscript2.png";

import apple1 from "../assets/apple/apple1.png";
import apple2 from "../assets/apple/apple2.png";
import apple3 from "../assets/apple/apple3.png";

import netflix1 from "../assets/netflix/netflix1.png";
import netflix2 from "../assets/netflix/netflix2.png";
import netflix3 from "../assets/netflix/netflix3.png";
import netflix4 from "../assets/netflix/netflix4.png";

import golf1 from "../assets/golf/golf1.png";
import golf2 from "../assets/golf/golf2.png";
import golf3 from "../assets/golf/golf3.png";
import golf4 from "../assets/golf/golf4.png";
import golf5 from "../assets/golf/golf5.png";
import golf6 from "../assets/golf/golf6.png";

// import rubiksCube1 from "../assets/rubiks-cube/rubiks-cube1.png";
// import rubiksCube2 from "../assets/rubiks-cube/rubiks-cube2.png";
// import rubiksCube3 from "../assets/rubiks-cube/rubiks-cube3.png";

const projects = [
  {
    name: "Chess With Minimax",
    description:
      "Developed in React and Typescript, this chess AI is a formidable opponent with its 1600 ELO level play. Utilizing the Minimax algorithm with performance-enhancing optimizations such as alpha-beta-pruning, the AI is capable of making quick and accurate decisions on the chessboard. Additionally, the AI provides an insightful evaluation of each move, indicating whether it's a good move or a blunder, making it a valuable tool for players looking to improve their game.",
    skills: ["React", "TypeScript", "Algorithms"],
    githubLink: "https://github.com/jordanlandry/chess-with-minimax",
    liveLink: "https://jordanlandry.github.io/chess-with-minimax",
    images: [chess1, chess2, chess3],
  },
  {
    name: "JanninScript",
    description:
      "A programming language crafted in C++, JanninScript offers high performance through its capability to compile into C++ code. The language was created as a personal experiment to understand the intracacies of compilers and language design. An online compiler built with Vue.js allows users to write, compile and run JanninScript code, providing the C++ code generated by the compiler as well as the output of the compiled program.",
    skills: ["C++", "Vue", "TypeScript"],
    githubLink: "https://github.com/jordanlandry/janninscript",
    liveLink: "https://jordanlandry.github.io/janninscript-online/",
    images: [janninscript1, janninscript2],
  },
  {
    name: "Apple Website Clone",
    description:
      "Developed in React and Typescript, this clone showcases advanced CSS and animation skills. The project was a personal challenge to push my skills of design and animation, and to explore new techniques in these areas. The end result is a near 1:1 clone of the Apple website.",
    skills: ["React", "TypeScript", "Animations", "CSS"],
    githubLink: "https://github.com/jordanlandry/apple-website-clone",
    liveLink: "https://jordanlandry.github.io/apple-website-clone/",
    images: [apple1, apple2, apple3],
  },
  {
    name: "Netflix Redesign",
    description:
      "Built in React and Typescript, this project contains the same features as Netflix, made with user experience as the top priority. Utilizing asynchronous functions for API calls and debounced values for data display, the site ensures a smooth and seamless user experience. Advanced algorithms such as a Levenshtein search, and algorithms that consider the user's watch history to suggest movies based on favourie actors, genres, and directors, make for a personalized viewing experience. The thumbnail of a movie will also dynamically update to feature a frequently watched actor, elevating the overall user experience.",
    skills: ["React", "TypeScript", "Algorithms", "Data Structures"],
    githubLink: "https://github.com/jordanlandry/netflix-redesign",
    liveLink: "https://jordanlandry.github.io/netflix-redesign/",
    images: [netflix1, netflix3, netflix2, netflix4],
  },
  {
    name: "Golf Without Your Friends",
    description:
      "A mini-putt game, developed in Unity and C#, which offers a challenging gaming experience. This project was an opportunity for me to learn a new framework and language, as well as explore 3D modeling using Blender. Realistic physics and lighting, add to the overall realism of the game. All levels were created using Blender. A YouTube video documenting the development of the game can be found on the Github repository.",
    skills: ["C#", "Unity", "Blender", "3D Modeling", "Game Design"],
    githubLink: "https://github.com/jordanlandry/golf-without-your-friends",
    liveLink: "https://github.com/jordanlandry/Golf-Without-Your-Friends/releases/tag/v1.0.0",
    images: [golf1, golf2, golf3, golf4, golf5, golf6],
  },
  {
    name: "Rubiks Cube Solver",
    description:
      "A 3D Rubik's cube, created using the ThreeJS framework, offering an interactive and fun experience for users. The cube can be scrambled and then solved in an animated fashion by the computer, using a choice of multiple solving methods. The size of the Rubik's cube can also be adjusted for added customization. This project was a learning experience in 3D development within the web browser and a hands-on exploration of the capabilities of the ThreeJS framework.",
    skills: ["TypeScript", "Algorithms", "Three.js"],
    githubLink: "https://github.com/jordanlandry/rubiks-cube-solver",
    liveLink: "https://jordanlandry.github.io/rubiks-cube-solver/",
    images: [rubiksCubeImage],
  },
];

export default projects;
